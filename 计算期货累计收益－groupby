import pandas as pd
df=pd.read_csv(futures.csv,usecols=[0,2,5,6,9],encoding='gbk')
-----------
#定义乘数函数
def multiple(x):
    if '1810' in x:
        return 10
    else:
        return 100
df['multiple']=df['证券代码'].apply(multiple) #定义“乘数”列，根据“证券代码”列对每条记录都应用乘数函数
-----------
#去掉股指期货
df=df[df['证券代码']!='IF1812'] #第一个[]中为条件
-----------
#分组计算每天的总成交数量与总成交金额
df1=pd.DataFrame(df.groupby(['证券代码','交易日期','结算价','multiple'])['成交数量','成交金额'].sum(),columns=['成交数量','成交金额'])
#groupby返回的只是对象，不是数据表；这里根据需要的标准groupby操作并且新建了一个数据表，列名不能变（这是一个奇怪的bug）
#这里的df1为groupby之后的统计情况，index为证券代码、交易日期、结算价、multiple
-----------
#计算每天hedge需要的虚拟订单数
df1['hedgenumber']=df1.groupby(['证券代码'])['成交数量'].cumsum()*(-1)
-----------
#不再需分组计算，解开分组情况（逆向思维，不需要了解开算更简单）
df1=df1.reset_index()
#计算日净收益
df1['yesterdayhedge']=df1.groupby(['证券代码'])['hedge'].shift(1)*(-1)
df1['日净收益']=(df1['成交金额']+df1['hedge']+df1['yesterdayhedge'])*(-1)
-----------
#计算累计净收益，由于我们最终所需的表只要有交易日期、日净收益、累计净收益即可，所以再输出一张最后的总表，简单明了。
df_pic=pd.DataFrame(df1.groupby(['交易日期'])['日净收益'].sum(),columns=['日净收益'])
df_pic['累计净收益']=df_pic['日净收益'].cumsum()
print(df_pic)

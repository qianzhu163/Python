1.import需要用到的模块
import pandas as pd
import matplotlib as plt
from pylab import *  
#学习用matplotlib绘制图像最简单的方法,使用matplotlib自身提供的类似MATLAB的API；
#这个步骤一定要引入，不然画不了图；
from datetime import timedelta, datetime #引入时间模块
import cx_Oracle

2.连接获取更新的期货交易
conn=cx_Oracle.connect("wind_read_only", "wind_read_only", "192.168.0.223:1521/orcl")
cursor=conn.cursor()
yesterday = datetime.today() + timedelta(-1) #获取昨天datetime格式的日期
yesterday_format = yesterday.strftime('%Y%m%d') #字符串格式化日期
sql="select TRADEDATE,SEC_CODE,PRICE,QUANTITY from CHINAAMCQUANT.PROD_TRADE_BAK where TRADEDATE >" \
+yesterday_format+"and SEC_CODE in ('RB1810','HC1810','J1809','I1809','ZC809')"

#(空格)\：系统识别不断行换行的方式，两个字符串之间加入一个参数
#futures_code=['RB1810','HC1810','J1809','I1809','ZC809']
#for i in futures_code:
#sql="select TRADEDATE,SEC_CODE,PRICE,QUANTITY from CHINAAMCQUANT.PROD_TRADE_BAK where TRADEDATE >" \
#+yesterday_format+"and SEC_CODE"+'i' is invalid

cursor.execute(sql)
updatedata=cursor.fetchall() #光标获得所有执行sql语句后得到的数据
conn.close() #关闭连接
update=pd.DataFrame(updatedata,columns=['交易日期','证券代码','成交价格','成交数量'])
def multiple(x):
    if '1810' in x:
        return 10
    else:
        return 100
update['multiple']=update['证券代码'].apply(multiple)
update['成交金额']=update['成交价格']*update['成交数量']*update['multiple']

3.获取7.13之前的期货交易信息
df=pd.read_csv('before713.csv',usecols=[0,2,5,6,9],encoding='gbk')
df['multiple']=df['证券代码'].apply(multiple)
final=pd.concat([df,update],ignore_index=True,sort=True)

4.将新老数据结合
#final会有两列，multiple、成交数量多出来;drop不是真的“扔掉了”
final=final[final['证券代码']!='IF1812']
final=final.drop(['成交价格'],axis=1)

5.计算期货收益
df1=pd.DataFrame(final.groupby(['证券代码','交易日期','结算价','multiple'])['成交数量','成交金额'].sum(), \
                 columns=['成交数量','成交金额'])
df1['hedgenumber']=df1.groupby(['证券代码'])['成交数量'].cumsum()*(-1)
df1=df1.reset_index()
df1['hedge']=df1['multiple']*df1['hedgenumber']*df1['结算价']
df1['yesterdayhedge']=df1.groupby(['证券代码'])['hedge'].shift(1)*(-1)
df1['日净收益']=(df1['成交金额']+df1['hedge']+df1['yesterdayhedge'])*(-1)
df1.iloc[0,9]=-540
df1.iloc[29,9]=-750
df1.iloc[55,9]=1850
df1.iloc[84,9]=-130
df1.iloc[113,9]=100
#这里数据不多，手动赋值
df_pic=pd.DataFrame(df1.groupby(['交易日期'])['日净收益'].sum(),columns=['日净收益'])
df_pic['累计净收益']=df_pic['日净收益'].cumsum()
df_pic.to_csv('futures_return.csv',encoding='gbk')
df_pic=df_pic.reset_index()
df_pic['benchmark']=0

6.画出期货收益图
fig=plt.figure(figsize=(12,12),dpi=100)
date = df_pic['交易日期']
dailyreturn = df_pic['日净收益']
accreturn=df_pic['累计净收益']
benchmark=df_pic['benchmark']
plt.bar(range(len(dailyreturn)),dailyreturn,tick_label=date,label='daily return')
plt.plot(range(len(accreturn)),accreturn,'o-',color = 'g',label='accumulative return')
plt.plot(range(len(accreturn)),benchmark,'r',color = 'k',label='0-axis')
plt.legend(loc=3)
plt.xlabel('trading day')
plt.xticks(rotation=90)
plt.ylabel('')
plt.title('Return of futures')
plt.savefig('return4.19_7.13.png',dpi=100)
plt.show()
#主要问题是现在没有期货的结算价，所以只统计到7.13日
